\chapter{Simulation Based Inference}


\SweaveOpts{prefix.string=figures/fig}  % location of 
\SweaveOpts{highlight=T}    % not sure this does anything unless we use pgfSweave
\SweaveOpts{tidy=F}         % keep.source probably disables this
\SweaveOpts{pdf=T}          % use pdf for graphics
\SweaveOpts{strip.white=T}  % remove blank lines at beginning and end 
\SweaveOpts{keep.source=T}  % keeps formatting from original; allows ? to work
\SweaveOpts{width=3}
\SweaveOpts{height=2}

<<setup,echo=F>>=
#setCacheDir("cache")
require(grDevices); require(datasets); require(stats); require(lattice)
require(fastR)
require(grid); 
require(mosaic); 
trellis.par.set(theme=col.mosaic(bw=FALSE))
trellis.par.set(fontsize=list(text=9))
options(keep.blank.line=FALSE); options(width=100)
xyplot <- function(...) { print(lattice::xyplot(...)) }
bwplot <- function(...) { print(lattice::bwplot(...)) }
histogram <- function(...) { print(lattice::histogram(...)) }
barchart <- function(...) { print(lattice::barchart(...)) }
require(vcd)
mosaic <- function(...) { print(vcd::mosaic(...)) }
@ 

\section{\texttt{mosaic} Randomization Widgets}

\subsection{Sampling and Resampling}

<<>>=
rnorm(20, mean=500, sd=100) 
rexp(20, rate=1/5)
@
<<>>=
rflip(20)
rdata(20, 1:4)
@


\subsection{\texttt{do()}}
The heart of a simulation is doing something over and over.  
The \verb!do()! function simplifies the syntax for this and improves 
the output format (usually returning a data frame).

<<>>=
do(5) * "hello"
@


\section{Examples}
\subsection{Lady Tasting Tea}
If you don't use the Lady Tasting Tea as a course starter, you can use it as 
an introduction to testing a proportion.

\subsection{Golfballs in the Yard}

<<>>=
require(fastR)
golfballs 
table( rdata(486, 1:4) )
@
<<>>=
rgolfballs <- do(10000) * table( rdata(486, 1:4) )
@


<<>>=
args(statTally)
@

\begin{center}
<<golfballs-max,fig=true>>=
print( statTally( golfballs, rgolfballs, max ) )
@
\end{center}

\begin{center}
<<golfballs-range,fig=true,height=1.7>>=
print( statTally( golfballs, rgolfballs, function(x) { diff(range(x)) } ) )
@
\end{center}

\begin{center}
<<golfballs-var,fig=true,height=1.7>>=
print( statTally( golfballs, rgolfballs, var ) )
@
\end{center}

\section{Comparing Two Means}

<<>>=
do(5) * lm( age ~ sex, HELP )
do(5) * diff(aggregate( age ~ shuffle(sex), HELP, mean )$age)
@

\section{Bootstrap?}

Do any of us do bootstrap in intro courses?  Other courses?  Do we want to include this?
Robin Lock is big on bootstrap.  Do we need any bootstrap tools in the \verb!mosaic! 
package?

Danny responds: We already have good-enough bootstrap tools in the
package: \texttt{do} and \texttt{resample}.  I don't do bootstrapping
early in the course, but I do talk about sampling variability from day
1.  Later on, I introduce bootstrapping as a way to simulate sampling
variability without having to collect more data.
