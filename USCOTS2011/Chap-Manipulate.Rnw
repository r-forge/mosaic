



\SweaveOpts{prefix.string=figures/fig}  % location of 
\SweaveOpts{highlight=T}    % not sure this does anything unless we use pgfSweave
\SweaveOpts{tidy=F}         % keep.source probably disables this
\SweaveOpts{pdf=T}          % use pdf for graphics
\SweaveOpts{strip.white=T}  % remove blank lines at beginning and end 
\SweaveOpts{keep.source=T}  % keeps formatting from original; allows ? to work

<<setup,echo=F>>=
source('setup.R')
@ 


\chapter{Getting Interactive with \texttt{manipulate}}

One very attractive feature of RStudio is the \verb!manipulate()! function, which
can allow the creation of a set of controls (such as \verb!slider()!, \verb!picker()!
or \verb!checkbox()!) that can be used to dynamically change values within the 
expression.  When a value is changed using these controls, the expression is automatically
re-executed and redrawn.  This can be used to quickly prototype a number of activities and
demos as part of a statistics lecture.

\section{Simple Things}

\subsection{Sliders}


<<manipulate-histogram,echo=TRUE, eval=FALSE>>=
if(require(manipulate)) {
  manipulate(
	histogram( ~ eruptions, data=faithful, n=n),
	n = slider(5,40)
  )
}
@
This generates a plot along with a slider ranging from 5 bins to 40.

\begin{center}
\includegraphics[width=3.8in]{images/manip-hist1.png}
\end{center}

When the slider is changed, we see a clearer view of the eruptions of Old Faithful.

\centerline{\includegraphics[width=3.8in]{images/manip-hist2.png}}



\subsection{Check Boxes}

<<manipulate-histogram>>=
if(require(manipulate)) {
  manipulate(
	xhistogram( ~ age, data=HELP, n=n, density=density),
	n = slider(5,40),
	density = checkbox()
  )
}
@

\subsection{Drop-down Menus}

<<manipulate-histogram>>=
if(require(manipulate)) {
  manipulate(
	xhistogram( ~ age, data=HELP, n=n, fit=distribution, dlwd=4),
	n = slider(5,40),
	distribution = 
		picker('normal', 'gamma', 'exponential', 'lognormal',
			   label="distribution")
  )
}
@

\subsection{Visualizing Normal Distributions}
<<manipulate-xpnorm>>=
if(require(manipulate)) {
  manipulate( xpnorm( x, 500, 100 ), x = slider(200,800) )
}
@


