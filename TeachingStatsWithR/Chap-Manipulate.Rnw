
\SweaveOpts{
tidy=TRUE,
dev=pdf,
fig.path=figures/fig-,  
fig.width=3, fig.height=2,
fig.align=center,
fig.show=hold,
comment=NA
}
<<setup,echo=FALSE,message=FALSE,results=hide>>=
source('setup.R')
@ 


\chapter{Getting Interactive with \texttt{manipulate}}

One very attractive feature of \RStudio\ is the \verb!manipulate()! function, which
can allow the creation of a set of controls (such as \verb!slider()!, \verb!picker()!
or \verb!checkbox()!) that can be used to dynamically change values within the 
expression.  When a value is changed using these controls, the expression is automatically
re-executed and redrawn.  This can be used to quickly prototype a number of activities and
demos as part of a statistics lecture.

\section{Simple Things}

\subsection{Sliders}

\authNote{need to remove \emph{if(require)}}

<<manipulate-histogram1, echo=TRUE, eval=FALSE>>=
if(require(manipulate)) {
  manipulate(
	histogram( ~ eruptions, data=faithful, n=n),
	n = slider(5,40)
  )
}
@
This generates a plot along with a slider ranging from 5 bins to 40.

\begin{center}
\includegraphics[width=3.8in]{images/manip-hist1.png}
\end{center}

When the slider is changed, we see a clearer view of the eruptions of Old Faithful.

\centerline{\includegraphics[width=3.8in]{images/manip-hist2.png}}



\subsection{Check Boxes}

<<manipulate-histogram2>>=
if(require(manipulate)) {
  manipulate(
	xhistogram( ~ age, data=HELP, n=n, density=density),
	n = slider(5,40),
	density = checkbox()
  )
}
@

\centerline{\includegraphics[width=3.8in]{images/manipulate-checkbox}}

\subsection{Drop-down Menus}

<<manipulate-histogram3>>=
if(require(manipulate)) {
  manipulate(
	xhistogram( ~ age, data=HELP, n=n, fit=distribution, dlwd=4),
	n = slider(5,40),
	distribution = 
		picker('normal', 'gamma', 'exponential', 'lognormal',
			   label="distribution")
  )
}
@

\centerline{\includegraphics[width=3.8in]{images/manipulate-picker}}

\subsection{Visualizing Normal Distributions}
<<manipulate-xpnorm>>=
if(require(manipulate)) {
  manipulate( xpnorm( x, 500, 100 ), x = slider(200,800) )
}
@
\centerline{\includegraphics[width=3.8in]{images/manipulate-xpnorm}}


\begin{problem}
The following code makes a scatterplot with separate symbols for each sex.
<<eval=FALSE>>=
xyplot(cesd ~ age, data=HELP, groups=sex)
@
Build a \pkg{manipulate} example that allows you to turn the grouping on and off with a 
checkbox.
\end{problem}

\begin{problem}
Build a \pkg{manipulate} example that uses a picker to select from a number of 
variables to make a plot for.  Here's an example with a histogram:

\medskip
\centerline{\includegraphics[width=3.8in]{images/manipulate-multihist}}
\end{problem}

\begin{problem}
Design your own  interactive demonstration idea and implement it using 
\RStudio\ \pkg{manipulate} tools.
\end{problem}

\section*{Exercises}
\shipoutProblems

